Readme file for mcmc_simbio, an MCMC toolbox for MATLAB Simbiology models. 
Vipul Singhal, 2017

Section 0) INTRODUCTION
This is a toolbox for performing MCMC sampling on parameter distributions that 'fit' your experimental data to MATLAB Simbiology models. We use the affine invariant ensemble Metropolis Hastings sampler, also known as the MCMC hammer. While this code allows the method to be used with arbitrary Simbiology models, we demonstrate and use it mainly for models generated by the TXTL Modeling toolbox (and eventually Miroslav Gasparek's BioSIMI). 

Section 1) QUICK START
- Add mcmc_simbio to the matlab path. 
- Run mcmc_init in the command line. 
- Run TXTLMT_MCMC_example.m. You are now running an MCMC simulation fitting a TXTL modeling toolbox model to RNA and GFP data (constitutive expression). Open the file TXTLMT_MCMC_example.m for more info on how you can set us your own code. 
- Also, read this README file. 

Section 2) DIRECTORY STRUCTURE AND DESCRIPTIONS

TOP LEVEL (L1): mcmc_Simbiology (dir) <—— make sure this is in the MATLAB path
L2>projects (dir)
L2>src (dir)
L2>data (dir)
L2>models (dir)
L2>mcmc_init.m (file) <—— run this file at the start of every MATLAB session by typing in mcmc_init into the command line
L2>README.txt (file)

############### projects ##################
In the projects directory, put a project script (.m) file. The name of this file is the project name, and all data generated by this project will use this name as an identifier (along with a timestamp of then the simulation data was generated). You must also create a directory (with a name that will be supplied to the project (.m) file) which will contain information on which species to measure, which parameters and species to estimate, and simulation hyperparameters. See Step 4 and 5 in section 3 below.  

############### src ##################
Source code for the toolbox. You probably do not want to touch this. 

This contains a set of functions for setting up data arrays, models, and specifying simulation conditions, and plotting and saving the results of the MCMC samples. 

Furthermore, it contains a version of the TXTL modeling toolbox, along with Aslak Grinsted's MATLAB implementation of the popular EMCEE package for MCMC sampling. This is an implementation the Goodman and Weare affine invariant Metropolis Hastings sampler. More info at https://github.com/grinsted and https://www.glaciology.net/. I have modified it slightly to handle integration tolerance problems that occur when we run Simbiology models using parameters with values differing by orders of magnitude. 

I have not yet linked the TXTL modeling toolbox repository to this repository. Instead, this package uses its own version of the toolbox that does not get updated when new changes are pushed to the main TXTL modeling toolbox repository. Same for the Grinsted MCMC code. I am aware of the existence of subtree merge capabilities that exist in Github, and will be setting up a dependency tree between the repositories in the future sometime (this is understandably low priority...).

############### exp_data ##################
Store your experimental data files here. Use the example file data_ZTDSG_ACS2014.m as a template. 

You can also store your data as a .mat array; in fact, I recommend that. See the file data_VS2017.m for an example of how to do this. 

Along with the raw data itself, you can also specify the experimental conditions and other metadata here, and store them as additional variables. 

############### models ##################

These are functions (.m) containing code to generate Simbiology model objects that will be used for the parameter inference. See the file model_constitutive_mrnagfp.m for a demonstration. 


Section 3) DESCRIPTION OF A PROTOTYPICAL PROJECT (.m) FILE

This project file should have a basic structure that follows the structure of the file TXTLMT_MCMC_example.m already present in the directory:

Step 1: 
Run project_init.m toset up a directory where the results of the MCMC (logfile, parameter estimates, figures) will be stored. 

Step 2: 
Import the data using the function mcmc_import_data

Step 3: 
Import the Simbiology model using the mcmc_import_model function. 

Step 4: 
Import an est_info struct, which contains information on which parameters and species initial conditions are to be estimated, which are to be fixed, along with some parameters for the MCMC itself -- stepsize, number of walkers, number of samples, chain thinning, parallelization info, how much to break the simulation up, the pause times between breaks (to help the machine stay cool, simulation tolerance info)


Step 5: Import a model_map struct using the function mcmc_model_map. This defines the experimental setup: The species which are measured in the model and their correspondence to the data, the dosing strategy (including replicates). 

Step 6: setup the log-prior function, and the log likelihood function. 

Step 7: setup and run the actual MCMC run, using the function mcmc_runsim. This runs MCMC and saves the results, along with a log file, and returns a string specifying exactly where this information is stored. 

Step 8: Finally, plot the results (corner plots, trajectories, markoc chains, autocorrelation) using the results, and optionally save these files. 

##############################################################
California Institute of Technology
Pasadena, CA
2017